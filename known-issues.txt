Last report from 15th January 2019:
(Same as per 30th November 2018, but removing underscore.string vulnerability)


Low Severity
Regular Expression Denial of Service (ReDoS)
Vulnerable module: braces
Previously identified.
The braces module is not one we use directly but instead is only used via modules related to unit testing, so for us it's a vulnerability that can affect build-time only, and since we control our build environments doesn't really apply.


Medium Severity
Time of Check Time of Use (TOCTOU)
Vulnerable module: chownr
Previously identified.
chownr is a deep sub dependency of react-scripts, react-app-rewired, , webpack-dev-server, nwb, jest and a few other tools. All of these tools are part of the development tool chain/CI/Jenkins and are not deployed to production code.
The issue raised is "Affected versions of chownr are vulnerable to Time of Check Time of Use (TOCTOU). It does not dereference symbolic links and changes the owner of the link."
There are no resolutions to this at present. As the issue does not affect any production code it is not deemed to be an issue.


Low Severity
Regular Expression Denial of Service (ReDoS)
Vulnerable module: debug
Previously identified.
This vulnerability present for quite some time in our report and only affects build/test.


Regular Expression Denial of Service (ReDoS)
LOW SEVERITY
Vulnerable module: eslint
Previously identified.
eslint is only used for linting/testing code during development. We do not intend to include it in a production build.


Low Severity
Prototype Pollution
Vulnerable module: lodash
Previously identified.
Lodash is not used directly by our code but is used via many many routes for build/test tooling.


Medium Severity
Denial of Service (DoS)
Vulnerable module: mem
Previously identified.
This is introduced by os-locale, which in turn is introduced by yargs, which is in turn used by multiple development tools (webpack, jest and more).
Yargs is a tool for making Node command line interfaces (CLIs). These are all used for development/build chain purposes only.
We do not plan to introduce CLIs in production code, therefore a DoS issue with a CLI tool is not a concern.


Low Severity
Regular Expression Denial of Service (ReDoS)
Vulnerable module: ms
Previously identified.
Only affects build-time unit testing.


High Severity
Command Injection
Vulnerable module: shelljs
Previously identified.
Only applicable to build-time.




Legacy report info follows:
---
Added 30th November 2018:

High Severity
Regular Expression Denial of Service (ReDoS)
Vulnerable module: underscore.string
This is a newly identified vulnerability, affecting an updated version of react-markdown that we are importing.
Whilst Snyk describes this as a "high severity" vulnerability, the nature of this vulnerability is that there may be a slowdown if very long strings are processed and the reality is we currently make only minimal use of markdown.  Where we do use it we are in complete control of all text provided, and thus we can easily avoid any issues.  The risk to us is therefore minimal, and should not be a concern.
We expect that this will be resolved in a later version of react-markdown.



---
Added 17 September 2018

Time of Check Time of Use (TOCTOU) - MEDIUM SEVERITY - Vulnerable module: chownr

chownr is a deep sub dependency of react-scripts, react-app-rewired, , webpack-dev-server, nwb, jest and a few other tools. All of these tools are part of the development tool chain/CI/Jenkins and are not deployed to production code.
The issue raised is "Affected versions of chownr are vulnerable to Time of Check Time of Use (TOCTOU). It does not dereference symbolic links and changes the owner of the link."
There are no resolutions to this at present. As the issue does not affect any production code it is not deemed to be an issue.


Insecure Randomness - MEDIUM SEVERITY - Vulnerable module: cryptiles

This is introduced by unit testing tools (karma) that are used by nwb.
Unit testing tools for generating random numbers will not make it in to production code and are therefore not a concern.


Denial of Service (DoS) - MEDIUM SEVERITY - Vulnerable module: mem

This is introduced by os-locale, which in turn is introduced by yargs, which is in turn used by multiple development tools (webpack, jest and more).
Yargs is a tool for making Node command line interfaces (CLIs). These are all used for development/build chain purposes only.
We do not plan to introduce CLIs in production code, therefore a DoS issue with a CLI tool is not a concern.

---

Prototype Pollution
LOW SEVERITY
Vulnerable module: deep-extend

This module is a sub dependency of tape-watch, jest, webpack-dev-server, webpack, @storybook/react, nwb, react-scripts, cpx and babel-cli.
All of these are development tools that are used for building/unit testing. We do not intend to include them in a production build.

Regular Expression Denial of Service (ReDoS)
LOW SEVERITY
Vulnerable module: diff

This module is a sub dependency of react-scripts, jest-diff, nwb, expect, jest-glamor-react, sinon and jest.
These are all development tools used for building and unit testing. We do not intend to include them in a production build.

Regular Expression Denial of Service (ReDoS)
LOW SEVERITY
Vulnerable module: eslint
eslint is only used for linting/testing code during development. We do not intend to include it in a production build.

Regular Expression Denial of Service (ReDoS)
LOW SEVERITY
Vulnerable module: nwmatcher
Introduced through react-scripts, jsdom, jest, which are all developer tools for building and unit testing. We do not intend to include this module in production builds so are not concerned about DDoS issues.

Prototype Override
HIGH SEVERITY
Vulnerable module: querystringify
This is introduced through react-scripts, @storybook/react and webpack-dev-server.
These are all developer tools for building and debugging. We do not intend to run any of these in a production environment so are not concerned about malicious query strings.

Uninitialized Memory Exposure
HIGH SEVERITY
Vulnerable module: http-proxy-agent
This is introduced via nwb, which is a tool we intend to use for small module builds. As far as I'm aware it only uses http-proxy-agent for running local development and testing environments, so this issue would not affect any production or publicly available code.

Uninitialized Memory Exposure
HIGH SEVERITY
Vulnerable module: https-proxy-agent
This is introduced via nwb, which is a tool we intend to use for small module builds. As far as I'm aware it only uses https-proxy-agent for running local development and testing environments, so this issue would not affect any production or publicly available code.

Uninitialized Memory Exposure
MEDIUM SEVERITY
Vulnerable module: ip
This is introduced via nwb, which is a tool we intend to use for small module builds. As it's a developer tool, we do not intend to be running `ip` or nwb in an environment where we would be concerned about the executing code leaking information from memory, therefore the raised security issue is not relevant.


Regular Expression Denial of Service (ReDoS)
HIGH SEVERITY
Vulnerable module: timespan
This is introduced through nwb and it's sub dependency of karma.
Karma is a unit testing framework, unit tests would only be run in controlled environments and karma would not be deployed to production environments, so we are not concerned about DDoS issues.


Low Severity
Regular Expression Denial of Service (ReDoS)
Vulnerable module: braces

The braces module is not one we use directly but instead is only used via modules related to unit testing, so for us it's a vulnerability that can affect build-time only, and since we control our build environments doesn't really apply.


Medium Severity
Regular Expression Denial of Service (ReDoS)
Vulnerable module: content-type-parser

This specific vulnerability has been present in our report for some time - we're introducing it now via a few more paths than before, but it only applies to build-time and cannot affect run-time.


Low Severity
Regular Expression Denial of Service (ReDoS)
Vulnerable module: debug

This vulnerability present for quite some time in our report and only affects build/test.


Low Severity
Prototype Pollution
Vulnerable module: hoek

Module is only used via build and test related module, and is not used directly.
This vulnerability is present down many many paths, however as it's only used via build and test modules the risks involved are minimal.


Low Severity
Prototype Pollution
Vulnerable module: lodash

Lodash is not used directly by our code, but is used via many many routes, primarily for build/test tooling, but with a few instances of run-time usage.
The nature of this vulnerability is such that it provides essentially no risk to us.  We do not use lodash directly, and given how we do indirectly use it in our run-time environment it would be exceedingly difficult to exploit - for example requiring the API server to be compromised - even then it's unlikely that the manner in which lodash is used would allow for this vulnerability to be exploited..


Low Severity
Regular Expression Denial of Service (ReDoS)
Vulnerable module: ms

Vulnerability previously identified and only affects build-time unit testing.


High Severity
Command Injection
Vulnerable module: shelljs

Previously identified vulnerability.  Only applicable to build-time.


Medium Severity
Uninitialized Memory Exposure
Vulnerable module: tunnel-agent

Previously identified vulnerability.  Only applicable to build-time.


Low Severity
Regular Expression Denial of Service (ReDoS)
Vulnerable module: validator

Module is only used via oas-raml-converter, which is only used as tooling to prepare data for a prototype stub server.
